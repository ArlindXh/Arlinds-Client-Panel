{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-client/add-client.component.css","webpack:///./src/app/components/add-client/add-client.component.html","webpack:///./src/app/components/add-client/add-client.component.ts","webpack:///./src/app/components/client-details/client-details.component.css","webpack:///./src/app/components/client-details/client-details.component.html","webpack:///./src/app/components/client-details/client-details.component.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-client/edit-client.component.css","webpack:///./src/app/components/edit-client/edit-client.component.html","webpack:///./src/app/components/edit-client/edit-client.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/register.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\"\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component'\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterGuard } from './guards/register.guard';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent, canActivate: [RegisterGuard] },\n  { path: 'client/add', component: AddClientComponent, canActivate: [AuthGuard] },\n  { path: 'client/edit/:id', component: EditClientComponent, canActivate: [AuthGuard] },\n  { path: 'client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard] },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent },\n\n]\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuard, RegisterGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages>\\n\\n  </flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { ClientService } from '../app/services/client.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { SettingsService } from '../app/services/settings.service';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, \"clientpanel\"),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [ClientService, AuthService, SettingsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back To Dashboard\\n    </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Add Client\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" #clientFirstName=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid':clientFirstName.errors && clientFirstName.touched}\\\"\\n          [(ngModel)]=\\\"client.firstName\\\" minlength=\\\"2\\\" required>\\n\\n        <div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          First name required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 2 characters\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" #clientLastName=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid':clientLastName.errors && clientLastName.touched}\\\"\\n          [(ngModel)]=\\\"client.lastName\\\" minlength=\\\"2\\\" required>\\n\\n        <div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Last name required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 2 characters\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" #clientEmail=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid':clientEmail.errors && clientEmail.touched}\\\"\\n          [(ngModel)]=\\\"client.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required>\\n\\n        <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Email required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n          Email is not valid\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">Phone</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':clientPhone.errors && clientPhone.touched}\\\"\\n          [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" #clientPhone=\\\"ngModel\\\" minlength=\\\"9\\\" required>\\n        <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Phone is required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientPhone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 10 characters\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"balance\\\">Balance</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"client.balance\\\" name=\\\"balance\\\" #clientBalance=\\\"ngModel\\\"\\n          [disabled]=\\\"disableBalanceOnAdd\\\">\\n      </div>\\n\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ClientService } from '../../services/client.service';\nimport { Router } from '@angular/router';\nimport { SettingsService } from '../../services/settings.service';\n\nimport { Client } from '../../models/Client';\n\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  }\n\n  disableBalanceOnAdd: boolean\n  @ViewChild('clientForm') form: any;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private clientService: ClientService,\n    private router: Router,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit() {\n\n    this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalanceOnAdd;\n  }\n\n  onSubmit({ value, valid }: { value: Client, valid: boolean }) {\n    if (this.disableBalanceOnAdd) {\n      value.balance = 0;\n    }\n\n    if (!valid) {\n      // Show error\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    } else {\n      // Add new client\n      this.clientService.newClient(value);\n      // Show message\n      this.flashMessage.show('New client added', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      // Redirect to dash\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Dashboard\\n    </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"btn-group pull-right\\\">\\n      <a routerLink=\\\"/client/edit/{{ id }}\\\" class=\\\"btn btn-dark\\\">\\n        Edit\\n      </a>\\n      <button (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<div *ngIf=\\\"client\\\" class=\\\"card\\\">\\n  <h3 class=\\\"card-header\\\">{{ client.firstName }} {{ client.lastName }}</h3>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"cold-md-8 col-sm-6\\\">\\n        <h4>Client ID: {{ client.id }}</h4>\\n      </div>\\n      <div class=\\\"cold-md-8 col-sm-6\\\">\\n        <h3 class=\\\"pull-right\\\">\\n          Balance\\n          <span [class.text-danger]=\\\"hasBalance\\\" [class.text-success]=\\\"!hasBalance\\\">\\n            {{ client.balance | currency:\\\"USD\\\":\\\"symbol\\\" }}\\n          </span>\\n          <small>\\n            <a (click)=\\\"showBalanceUpdateInput = !showBalanceUpdateInput\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n            </a>\\n          </small>\\n        </h3>\\n        <div class=\\\"clearfix\\\">\\n          <form *ngIf=\\\"showBalanceUpdateInput\\\" (submit)=\\\"updateBalance()\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" name=\\\"balance\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"client.balance\\\">\\n              <span class=\\\"input-group-btn\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn ptn-primary\\\">Update</button>\\n              </span>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">Contact Email: {{ client.email }}</li>\\n      <li class=\\\"list-group-item\\\">Contact Phone: {{ client.phone }}</li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\n\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n  id: string;\n  client: Client;\n  hasBalance: boolean = false;\n  showBalanceUpdateInput: boolean = false;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe(client => {\n      if (client != null) {\n        if (client.balance > 0) {\n          this.hasBalance = true;\n        }\n      }\n\n      this.client = client;\n    });\n  }\n\n  updateBalance() {\n    this.clientService.updateClient(this.client);\n    this.flashMessage.show('Balance updated', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n  }\n\n  onDeleteClick() {\n    if (confirm(\"Are you sure you want to delete this client?\")) {\n      this.clientService.deleteClient(this.client);\n      this.flashMessage.show('Client removed', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      this.router.navigate(['']);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2>\\n      <i class=\\\"fa fa-users\\\"></i> Clients</h2>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <h5 class=\\\"text-right text-secondary\\\">Total Owed: {{totalOwed | currency : \\\"USD\\\":\\\"symbol\\\"}}</h5>\\n  </div>\\n</div>\\n<table *ngIf=\\\"clients?.length > 0; else noClients\\\" class=\\\"table table-striped\\\">\\n  <thead class=\\\"thead-inverse\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Email</th>\\n      <th>Balance</th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor='let client of clients'>\\n      <td>{{client.firstName}} {{ client.lastName}} </td>\\n      <td>{{client.email}}</td>\\n      <td>{{client.balance | currency:\\\"USD\\\" : \\\"symbol\\\"}}</td>\\n      <td><a routerLink=\\\"client/{{client.id}}\\\" class=\\\"btn btn-secondary btn-sm\\\"> <i class=\\\"fa fa-arrow-circle-o-right\\\"></i>\\n          Details</a></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<ng-template #noClients>\\n  <hr>\\n  <img class=\\\"col-md-12\\\" src=\\\"https://docs.particular.net/serviceinsight/images/no-conversation-data-available.png\\\">\\n\\n\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n\n  //declaring totalOwed\n  totalOwed: number;\n\n  constructor(private clientService: ClientService) {\n  }\n\n  ngOnInit() {\n\n    //fetch the clients from firebase\n\n    this.clientService.getClients().subscribe(clients => {\n      this.clients = clients;\n      this.getTotalOwed();\n    });\n  }\n  //looping through the clients to calc all the totalOwed\n  getTotalOwed() {\n    this.totalOwed = this.clients.reduce((total, client) => {\n      return total + parseFloat(client.balance.toString());\n    }, 0)\n\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-10\\\">\\r\\n        <app-clients></app-clients>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n        <app-sidebar></app-sidebar>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/client/{{ id }}\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back To Client\\n    </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Edit Client\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" #clientFirstName=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid':clientFirstName.errors && clientFirstName.touched}\\\"\\n          [(ngModel)]=\\\"client.firstName\\\" minlength=\\\"2\\\" required>\\n\\n        <div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          First name required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 2 characters\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" #clientLastName=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid':clientLastName.errors && clientLastName.touched}\\\"\\n          [(ngModel)]=\\\"client.lastName\\\" minlength=\\\"2\\\" required>\\n\\n        <div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Last name required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 2 characters\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" #clientEmail=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid':clientEmail.errors && clientEmail.touched}\\\"\\n          [(ngModel)]=\\\"client.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required>\\n\\n        <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Email required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n          Email is not valid\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">Phone</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':clientPhone.errors && clientPhone.touched}\\\"\\n          [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" #clientPhone=\\\"ngModel\\\" minlength=\\\"9\\\" required>\\n        <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Phone is required\\n        </div>\\n\\n        <div [hidden]=\\\"!clientPhone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 10 characters\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"balance\\\">Balance</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"client.balance\\\" name=\\\"balance\\\" #clientBalance=\\\"ngModel\\\"\\n          [disabled]=\\\"disableBalanceOnEdit\\\">\\n      </div>\\n\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\nimport { SettingsService } from '../../services/settings.service';\nimport { Settings } from 'angularfire2/firestore';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n  id: string;\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  }\n  disableBalanceOnEdit: boolean\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit() {\n    this.disableBalanceOnEdit = this.settingsService.getSettings().disableBalanceOnEdit;\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe(client => this.client = client);\n  }\n\n  onSubmit({ value, valid }: { value: Client, valid: boolean }) {\n    if (!valid) {\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    } else {\n      // Add id to client by ourselves because it isnt included in the form by itself\n      value.id = this.id;\n      // Update client\n      this.clientService.updateClient(value);\n      this.flashMessage.show('Client updated', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      this.router.navigate(['/client/' + this.id]);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\n          <span class=\\\"text-primary\\\"> <i class=\\\"fa fa-lock\\\"></i> Client Panel</span> Login\\n        </h1>\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]='email' class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]='password' class=\\\"form-control\\\" required>\\n          </div>\\n          <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // properties we need \n  email: string;\n  password: string;\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    // checking if we are logged in and it returns an observable\n    this.authService.getAuth().subscribe(auth => {\n      if (auth) {\n        this.router.navigate(['/'])\n      }\n    })\n\n  }\n\n  onSubmit() {\n    this.authService.login(this.email, this.password)\n      //login returns a promise, so when we grab a promise return we use .then\n      .then(res => {\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success', timeout: 3000\n        });\n        this.router.navigate(['/'])\n      })\n      // if there's an error we use .catch to catch the err that we put in reject\n      .catch(err => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger', timeout: 3000\n        });\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary mb-4\\\">\\n  <div class=\\\"container\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">Client Panel</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarMain\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarMain\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Dashboard</a>\\n        </li>\\n      </ul>\\n      <div class=\\\"dropdown-divider\\\"></div>\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/register\\\" class=\\\"nav-link\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"!isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a href='#' class=\\\"nav-link\\\">{{ loggedInUser }}</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a routerLink='/settings' class=\\\"nav-link\\\">Settings</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\" class=\\\"nav-link\\\">Logout</a>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  loggedInUser: string;\n  showRegister: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit() {\n    // checking if we are logged in and it returns an observable\n    this.authService.getAuth().subscribe(auth => {\n      if (auth) {\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n      } else {\n        this.isLoggedIn = false;\n      }\n    });\n\n\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show(\"You are logged out\", {\n      cssClass: 'alert-success', timeout: 4000\n    });\n    this.router.navigate(['/login'])\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\n          <span class=\\\"text-primary\\\"> <i class=\\\"fa fa-lock\\\"></i> Client Panel</span> Register\\n        </h1>\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]='email' class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]='password' class=\\\"form-control\\\" required>\\n          </div>\\n          <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  // properties we need \n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n\n  }\n  onSubmit() {\n    this.authService.register(this.email, this.password)\n      .then(res => {\n        this.flashMessage.show('You are now registered', {\n          cssClass: 'alert-success', timeout: 4000\n        })\n        this.router.navigate(['/'])\n      })\n      .catch(err => {\n        this.flashMessage.show(err.messages, {\n          cssClass: 'alert-danger', timeout: 4000\n        })\n      })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i>\\n      Back to Dashboard\\n    </a>\\n    <div class=\\\"col-md-6\\\"></div>\\n  </div>\\n</div>\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Edit Settings\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form (submit)='onSubmit()'>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"checkbox\\\" name=\\\"allowRegistration\\\" [checked]='settings.allowRegistration' (change)='settings.allowRegistration = !settings.allowRegistration'>\\n        <label> Allow Registration </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n\\n        <input type=\\\"checkbox\\\" name=\\\"disableBalanceOnAdd\\\" [checked]='settings.disableBalanceOnAdd' (change)='settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd'>\\n        <label> Disable Balance On Add</label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n\\n        <input type=\\\"checkbox\\\" name=\\\"disableBalanceOnEdit\\\" [checked]='settings.disableBalanceOnEdit' (change)='settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit'>\\n        <label> Disable Balance On Edit </label>\\n      </div>\\n\\n      <input type=\\\"submit\\\" value=\\\"Submit Changes\\\" class=\\\"btn btn-primary \\\">\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\nimport { Settings } from '..//../models/Settings';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  settings: Settings;\n\n\n  constructor(\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n\n  ) { }\n\n  ngOnInit() {\n    //gets all the settings\n    this.settings = this.settingsService.getSettings();\n  }\n  //this.settings is bound to the form , [checked] looks at settings property and when it changes it will toggle\n  onSubmit() {\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessage.show(\"Settings Saved\", { cssClass: 'alert-success', timeout: 4000 })\n  }\n}\n","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/client/add\\\" class=\\\"btn btn-success btn-block\\\">\\n  <i class=\\\"fa fa-plus\\\"> New</i>\\n</a>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private afAuth: AngularFireAuth\r\n    ) { }\r\n\r\n    canActivate(): Observable<boolean> {\r\n        return this.afAuth.authState.map(auth => {\r\n            {\r\n                if (!auth) {\r\n                    this.router.navigate(['/login']);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { SettingsService } from '../services/settings.service';\r\n\r\n@Injectable()\r\n\r\nexport class RegisterGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private settingService: SettingsService\r\n    ) { }\r\n\r\n    // if registration is not allowed it will redirect us to the login\r\n    canActivate(): boolean {\r\n        if (this.settingService.getSettings().allowRegistration) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private afAuth: AngularFireAuth\n  ) { }\n\n  login(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      // email and pw coming from the parameters\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n        // returns a promise where it gives the user data and use resolve when we wanna return something from the promise\n        .then(userData => resolve(userData),\n          err => reject(err))\n    });\n  }\n\n  register(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      // email and pw coming from the parameters\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n        // returns a promise where it gives the user data and use resolve when we wanna return something from the promise\n        .then(userData => resolve(userData),\n          err => reject(err))\n    });\n  }\n\n\n  //function to check if we are logged in\n  getAuth() {\n    return this.afAuth.authState.map(auth => auth);\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport 'rxjs-compat'\n\nimport { Client } from '../models/Client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) {\n    //sorting the clients by lastname and ascending\n    this.clientsCollection = this.afs.collection('clients', ref => ref.orderBy('lastName', 'asc'));\n  }\n\n  getClients(): Observable<Client[]> {\n    //Get clients with the id    \n    this.clients = this.clientsCollection.snapshotChanges().pipe(map(actions => actions.map(a => {\n      const data = a.payload.doc.data() as Client;\n      data.id = a.payload.doc.id;\n      return data;\n    })\n    ));\n    return this.clients;\n  }\n\n  //e shtojm klientin e ri te krjuar te add-client onSubmit\n  newClient(client: Client) {\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id: string): Observable<Client> {\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().map(action => {\n      if (action.payload.exists === false) {\n        return null;\n      } else {\n        const data = action.payload.data() as Client;\n        data.id = action.payload.id;\n        return data;\n      }\n    });\n    return this.client;\n  }\n\n  updateClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n\n  deleteClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Settings } from '../models/Settings'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalanceOnAdd: true,\n    disableBalanceOnEdit: true\n  }\n\n  constructor() {\n    // we want the settings to be saved in local storage(browser)\n    if (localStorage.getItem('settings') != null) {\n      //local storage only holds strings so we use parse to convert the string  to an array of objects\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n  }\n\n  getSettings(): Settings {\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings) {\n    // we use stringify to convert the objects into strings\n    localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    // Initialize Firebase\n    apiKey: \"AIzaSyD_otu191iJV5AZr5LJ_VMaTyAViOtj8OI\",\n    authDomain: \"clientpanelprod-2bf90.firebaseapp.com\",\n    databaseURL: \"https://clientpanelprod-2bf90.firebaseio.com\",\n    projectId: \"clientpanelprod-2bf90\",\n    storageBucket: \"clientpanelprod-2bf90.appspot.com\",\n    messagingSenderId: \"422429077126\"\n\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}